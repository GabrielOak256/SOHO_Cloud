// This is just pseudo-code for now. 

// I'm familiar with C++, but Python might be more appropriate. 

vector<vector<string>> urls = {https://Debian/compatibilitylist, https://Arch/compatibilitylist, ... /* however many we're checking */};
vector<iso_file> installers = {debian.iso, arch.iso, and so on}

string this_model = get_system_hardware();

for (int i = 0; i < urls.size(); ++i) {
    vector<string> models = /*something to the effect of*/ wget url[i] 
      for (model in models) 
          if (this_model == model)
            reboot from installers[i]
}


// From here, it might be necessary to use a separate Ansible/Pulumi/Terraform/Vagrant Playbook. 

if (OS == Debian) {sudo apt update && sudo apt upgrade}
elif (OS == Arch) {yum ...}
...
else {cout << "unlisted OS"}

Then disable all services not needed for the health of the system or by Podman, and install Podman. 
Link up with Kubernetes on LAN. 


// The above is unclear on how it all works, and clearly isn't useable code, let alone trustworthy secure IaC. 
